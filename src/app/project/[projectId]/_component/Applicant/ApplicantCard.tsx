import Button from "@/components/Button";
import Modal from "@/components/Modal";
import { useEffect, useRef, useState } from "react";

export default function ApplicantCard({ state }: { state: "default" | "confirm" | "reject" | "locked" }) {
    if (state === "locked") return <LockedCard />;
    else return <Card state={state} />;
}

const content = `3년차 프론트엔드 개발자 홍길동입니다.<br/>꼭 참여하고 싶습니다.`;

const Card = ({ state }: { state: "default" | "confirm" | "reject" }) => {
    const [isDotsThreeVerticalOpen, setIsDotsThreeVerticalOpen] = useState(false); // DotsThreeVertical Dropdown 오픈
    const dotsThreeVerticalRef = useRef<HTMLDivElement>(null);

    // DotsThreeVertical Dropdown 오픈 외부 클릭 시 닫기
    useEffect(() => {
        const handleClickOutside = (event: MouseEvent) => {
            if (dotsThreeVerticalRef.current && !dotsThreeVerticalRef.current.contains(event.target as Node)) {
                setIsDotsThreeVerticalOpen(false);
            }
        };

        document.addEventListener("mousedown", handleClickOutside);
        return () => {
            document.removeEventListener("mousedown", handleClickOutside);
        };
    }, []);

    const [isEdit, setIsEdit] = useState<boolean>(false); // 수정 모드 변경
    const [isCancelModalOpen, setIsCancelModalOpen] = useState<boolean>(false); // 지원 취소 모달 오픈
    const [isSpecOpen, setIsSpecOpen] = useState(true); // 보유 스펙 오픈

    return (
        <div className="w-full border border-n400 rounded-lg p-6 flex flex-col gap-4">
            <div className="flex justify-between items-start">
                <div className="flex items-center gap-2">
                    <div className="flex gap-2 items-center">
                        <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <rect x="0.714286" y="0.714286" width="38.5714" height="38.5714" rx="19.2857" fill="white" />
                            <rect x="0.714286" y="0.714286" width="38.5714" height="38.5714" rx="19.2857" stroke="#D8DAE5" strokeWidth="1.42857" />
                            <path
                                opacity="0.2"
                                d="M18.75 16.25C18.75 16.7445 18.6034 17.2278 18.3287 17.6389C18.054 18.05 17.6635 18.3705 17.2067 18.5597C16.7499 18.7489 16.2472 18.7984 15.7623 18.702C15.2773 18.6055 14.8319 18.3674 14.4822 18.0178C14.1326 17.6681 13.8945 17.2227 13.798 16.7377C13.7016 16.2528 13.7511 15.7501 13.9403 15.2933C14.1295 14.8365 14.45 14.446 14.8611 14.1713C15.2722 13.8966 15.7555 13.75 16.25 13.75C16.913 13.75 17.5489 14.0134 18.0178 14.4822C18.4866 14.9511 18.75 15.587 18.75 16.25ZM23.75 13.75C23.2555 13.75 22.7722 13.8966 22.3611 14.1713C21.95 14.446 21.6295 14.8365 21.4403 15.2933C21.2511 15.7501 21.2016 16.2528 21.298 16.7377C21.3945 17.2227 21.6326 17.6681 21.9822 18.0178C22.3319 18.3674 22.7773 18.6055 23.2623 18.702C23.7472 18.7984 24.2499 18.7489 24.7067 18.5597C25.1635 18.3705 25.554 18.05 25.8287 17.6389C26.1034 17.2278 26.25 16.7445 26.25 16.25C26.25 15.587 25.9866 14.9511 25.5178 14.4822C25.0489 14.0134 24.413 13.75 23.75 13.75ZM16.25 21.25C15.7555 21.25 15.2722 21.3966 14.8611 21.6713C14.45 21.946 14.1295 22.3365 13.9403 22.7933C13.7511 23.2501 13.7016 23.7528 13.798 24.2377C13.8945 24.7227 14.1326 25.1681 14.4822 25.5178C14.8319 25.8674 15.2773 26.1055 15.7623 26.202C16.2472 26.2984 16.7499 26.2489 17.2067 26.0597C17.6635 25.8705 18.054 25.55 18.3287 25.1389C18.6034 24.7278 18.75 24.2445 18.75 23.75C18.75 23.087 18.4866 22.4511 18.0178 21.9822C17.5489 21.5134 16.913 21.25 16.25 21.25Z"
                                fill="#C1C4D6"
                            />
                            <path
                                d="M16.25 13.125C15.6319 13.125 15.0277 13.3083 14.5138 13.6517C13.9999 13.995 13.5994 14.4831 13.3629 15.0541C13.1264 15.6251 13.0645 16.2535 13.185 16.8597C13.3056 17.4658 13.6033 18.0227 14.0403 18.4597C14.4773 18.8967 15.0342 19.1944 15.6403 19.315C16.2465 19.4355 16.8749 19.3736 17.4459 19.1371C18.0169 18.9006 18.505 18.5001 18.8483 17.9862C19.1917 17.4723 19.375 16.8681 19.375 16.25C19.375 15.4212 19.0458 14.6263 18.4597 14.0403C17.8737 13.4542 17.0788 13.125 16.25 13.125ZM16.25 18.125C15.8792 18.125 15.5166 18.015 15.2083 17.809C14.9 17.603 14.6596 17.3101 14.5177 16.9675C14.3758 16.6249 14.3387 16.2479 14.411 15.8842C14.4834 15.5205 14.662 15.1864 14.9242 14.9242C15.1864 14.662 15.5205 14.4834 15.8842 14.411C16.2479 14.3387 16.6249 14.3758 16.9675 14.5177C17.3101 14.6596 17.603 14.9 17.809 15.2083C18.015 15.5166 18.125 15.8792 18.125 16.25C18.125 16.7473 17.9275 17.2242 17.5758 17.5758C17.2242 17.9275 16.7473 18.125 16.25 18.125ZM23.75 19.375C24.3681 19.375 24.9723 19.1917 25.4862 18.8483C26.0001 18.505 26.4006 18.0169 26.6371 17.4459C26.8737 16.8749 26.9355 16.2465 26.815 15.6403C26.6944 15.0342 26.3968 14.4773 25.9597 14.0403C25.5227 13.6033 24.9659 13.3056 24.3597 13.185C23.7535 13.0645 23.1251 13.1264 22.5541 13.3629C21.9831 13.5994 21.495 13.9999 21.1517 14.5138C20.8083 15.0277 20.625 15.6319 20.625 16.25C20.625 17.0788 20.9542 17.8737 21.5403 18.4597C22.1263 19.0458 22.9212 19.375 23.75 19.375ZM23.75 14.375C24.1208 14.375 24.4834 14.485 24.7917 14.691C25.1 14.897 25.3404 15.1899 25.4823 15.5325C25.6242 15.8751 25.6613 16.2521 25.589 16.6158C25.5166 16.9795 25.3381 17.3136 25.0758 17.5758C24.8136 17.8381 24.4795 18.0166 24.1158 18.089C23.7521 18.1613 23.3751 18.1242 23.0325 17.9823C22.6899 17.8404 22.397 17.6 22.191 17.2917C21.985 16.9834 21.875 16.6208 21.875 16.25C21.875 15.7527 22.0725 15.2758 22.4242 14.9242C22.7758 14.5725 23.2527 14.375 23.75 14.375ZM16.25 20.625C15.6319 20.625 15.0277 20.8083 14.5138 21.1517C13.9999 21.495 13.5994 21.9831 13.3629 22.5541C13.1264 23.1251 13.0645 23.7535 13.185 24.3597C13.3056 24.9659 13.6033 25.5227 14.0403 25.9597C14.4773 26.3968 15.0342 26.6944 15.6403 26.815C16.2465 26.9355 16.8749 26.8737 17.4459 26.6371C18.0169 26.4006 18.505 26.0001 18.8483 25.4862C19.1917 24.9723 19.375 24.3681 19.375 23.75C19.375 22.9212 19.0458 22.1263 18.4597 21.5403C17.8737 20.9542 17.0788 20.625 16.25 20.625ZM16.25 25.625C15.8792 25.625 15.5166 25.515 15.2083 25.309C14.9 25.103 14.6596 24.8101 14.5177 24.4675C14.3758 24.1249 14.3387 23.7479 14.411 23.3842C14.4834 23.0205 14.662 22.6864 14.9242 22.4242C15.1864 22.162 15.5205 21.9834 15.8842 21.911C16.2479 21.8387 16.6249 21.8758 16.9675 22.0177C17.3101 22.1596 17.603 22.4 17.809 22.7083C18.015 23.0167 18.125 23.3792 18.125 23.75C18.125 24.2473 17.9275 24.7242 17.5758 25.0758C17.2242 25.4275 16.7473 25.625 16.25 25.625ZM26.875 23.75C26.875 23.9158 26.8092 24.0747 26.6919 24.1919C26.5747 24.3092 26.4158 24.375 26.25 24.375H24.375V26.25C24.375 26.4158 24.3092 26.5747 24.1919 26.6919C24.0747 26.8092 23.9158 26.875 23.75 26.875C23.5842 26.875 23.4253 26.8092 23.3081 26.6919C23.1908 26.5747 23.125 26.4158 23.125 26.25V24.375H21.25C21.0842 24.375 20.9253 24.3092 20.8081 24.1919C20.6908 24.0747 20.625 23.9158 20.625 23.75C20.625 23.5842 20.6908 23.4253 20.8081 23.3081C20.9253 23.1908 21.0842 23.125 21.25 23.125H23.125V21.25C23.125 21.0842 23.1908 20.9253 23.3081 20.8081C23.4253 20.6908 23.5842 20.625 23.75 20.625C23.9158 20.625 24.0747 20.6908 24.1919 20.8081C24.3092 20.9253 24.375 21.0842 24.375 21.25V23.125H26.25C26.4158 23.125 26.5747 23.1908 26.6919 23.3081C26.8092 23.4253 26.875 23.5842 26.875 23.75Z"
                                fill="#C1C4D6"
                            />
                        </svg>

                        <div className="text-lg text-n900 font-medium flex gap-1 items-center">
                            홍길동{state === "confirm" && <div className="w-fit h-[18px] px-1.5 bg-taskmateRed rounded-[12px] text-[10px] leading-[18px] text-white font-normal">확정</div>}
                        </div>
                    </div>

                    <div className="flex gap-2 items-center text-sm text-n900">
                        <div>백엔드 개발자</div>
                        <div className="w-[1px] h-[15.5px] bg-n300"></div>
                        <div>경력 4년</div>
                        <div className="w-[1px] h-[15.5px] bg-n300"></div>
                        <div>프로젝트 경험 2회</div>
                    </div>
                </div>

                {!isEdit && (
                    <div className="relative" ref={dotsThreeVerticalRef}>
                        <div className=" w-8 h-8 rounded-[4px] border border-n500 flex justify-center items-center cursor-pointer" onClick={() => setIsDotsThreeVerticalOpen(!isDotsThreeVerticalOpen)}>
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path
                                    d="M13.125 12C13.125 12.2225 13.059 12.44 12.9354 12.625C12.8118 12.81 12.6361 12.9542 12.4305 13.0394C12.225 13.1245 11.9988 13.1468 11.7805 13.1034C11.5623 13.06 11.3618 12.9528 11.2045 12.7955C11.0472 12.6382 10.94 12.4377 10.8966 12.2195C10.8532 12.0012 10.8755 11.775 10.9606 11.5695C11.0458 11.3639 11.19 11.1882 11.375 11.0646C11.56 10.941 11.7775 10.875 12 10.875C12.2984 10.875 12.5845 10.9935 12.7955 11.2045C13.0065 11.4155 13.125 11.7016 13.125 12ZM12 6.75C12.2225 6.75 12.44 6.68402 12.625 6.5604C12.81 6.43679 12.9542 6.26109 13.0394 6.05552C13.1245 5.84995 13.1468 5.62375 13.1034 5.40552C13.06 5.1873 12.9528 4.98684 12.7955 4.82951C12.6382 4.67217 12.4377 4.56503 12.2195 4.52162C12.0012 4.47821 11.775 4.50049 11.5695 4.58564C11.3639 4.67078 11.1882 4.81498 11.0646 4.99998C10.941 5.18499 10.875 5.4025 10.875 5.625C10.875 5.92337 10.9935 6.20952 11.2045 6.4205C11.4155 6.63147 11.7016 6.75 12 6.75ZM12 17.25C11.7775 17.25 11.56 17.316 11.375 17.4396C11.19 17.5632 11.0458 17.7389 10.9606 17.9445C10.8755 18.15 10.8532 18.3762 10.8966 18.5945C10.94 18.8127 11.0472 19.0132 11.2045 19.1705C11.3618 19.3278 11.5623 19.435 11.7805 19.4784C11.9988 19.5218 12.225 19.4995 12.4305 19.4144C12.6361 19.3292 12.8118 19.185 12.9354 19C13.059 18.815 13.125 18.5975 13.125 18.375C13.125 18.0766 13.0065 17.7905 12.7955 17.5795C12.5845 17.3685 12.2984 17.25 12 17.25Z"
                                    fill="#474D66"
                                />
                            </svg>
                        </div>

                        {isDotsThreeVerticalOpen && (
                            <div className="absolute w-[120px] top-10 right-0 border border-n400 rounded-[4px] shadow-elevation2 bg-white">
                                <button
                                    className="w-full h-12 text-sm text-n800 px-3 text-start hover:bg-n75 rounded-t-[4px]"
                                    onClick={() => {
                                        setIsDotsThreeVerticalOpen(false);
                                        setIsCancelModalOpen(true);
                                    }}
                                >
                                    지원취소
                                </button>
                                <button
                                    className="w-full h-12 text-sm text-n800 px-3 text-start hover:bg-n75 rounded-b-[4px]"
                                    onClick={() => {
                                        setIsDotsThreeVerticalOpen(false);
                                        setIsEdit(true);
                                    }}
                                >
                                    수정
                                </button>
                            </div>
                        )}
                    </div>
                )}
            </div>

            {isEdit ? (
                <div className="w-full h-fit p-4 border border-n300 rounded-[4px] flex gap-2">
                    <textarea className="w-full h-fit min-h-12 resize-none border-none text-base text-n800 focus:outline-none"></textarea>
                    <div className="flex flex-col justify-end text-xs text-n800">0/20</div>
                </div>
            ) : (
                <div className="text-n900 text-base" dangerouslySetInnerHTML={{ __html: content }} />
            )}

            {isEdit && (
                <div className="w-full flex justify-end gap-2">
                    <Button btnType="line" label="취소" size="small" className="w-[74px] !rounded-[4px]" onClick={() => setIsEdit(false)} />
                    <Button btnType="primary" label="저장" size="small" className="w-[74px] !rounded-[4px]" onClick={() => setIsEdit(false)} />
                </div>
            )}
            {!isEdit && (
                <div className="flex flex-col gap-3">
                    <div className="w-fit flex items-center gap-1 text-smEmphasize text-n900 cursor-pointer" onClick={() => setIsSpecOpen(!isSpecOpen)}>
                        보유스펙
                        <svg
                            width="16"
                            height="16"
                            viewBox="0 0 16 16"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                            style={{ transform: `rotate(${isSpecOpen ? 0 : -180}deg)`, transition: "transform 0.2s" }}
                        >
                            <path
                                d="M13.3538 6.35378L8.35378 11.3538C8.30735 11.4003 8.2522 11.4372 8.1915 11.4623C8.13081 11.4875 8.06574 11.5004 8.00003 11.5004C7.93433 11.5004 7.86926 11.4875 7.80856 11.4623C7.74786 11.4372 7.69272 11.4003 7.64628 11.3538L2.64628 6.35378C2.55246 6.25996 2.49976 6.13272 2.49976 6.00003C2.49976 5.86735 2.55246 5.7401 2.64628 5.64628C2.7401 5.55246 2.86735 5.49976 3.00003 5.49976C3.13272 5.49976 3.25996 5.55246 3.35378 5.64628L8.00003 10.2932L12.6463 5.64628C12.6927 5.59983 12.7479 5.56298 12.8086 5.53784C12.8693 5.5127 12.9343 5.49976 13 5.49976C13.0657 5.49976 13.1308 5.5127 13.1915 5.53784C13.2522 5.56298 13.3073 5.59983 13.3538 5.64628C13.4002 5.69274 13.4371 5.74789 13.4622 5.80859C13.4874 5.86928 13.5003 5.93434 13.5003 6.00003C13.5003 6.06573 13.4874 6.13079 13.4622 6.19148C13.4371 6.25218 13.4002 6.30733 13.3538 6.35378Z"
                                fill="#8F95B2"
                            />
                        </svg>
                    </div>

                    {isSpecOpen && (
                        <div className="flex flex-wrap gap-2">
                            {["React", "Next", "Styled-components", "RxJS", "svelte", "Redux", "Tanstack-Query", "Redux-toolkit", "Redux-saga"].map((item) => {
                                return (
                                    <button key={item} className="border border-[#d8dae5] text-xs text-n900 rounded-full px-3 h-8 cursor-default pointer-events-none">
                                        {item}
                                    </button>
                                );
                            })}
                        </div>
                    )}
                </div>
            )}

            {state === "reject" && (
                <div className="w-full p-6 mt-5 bg-n75 border-t border-n300">
                    <div className="flex items-center gap-2 text-baseEmphasize text-n900 mb-2.5">
                        <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <rect x="0.5" y="0.5" width="27" height="27" rx="13.5" fill="white" />
                            <rect x="0.5" y="0.5" width="27" height="27" rx="13.5" stroke="#D8DAE5" />
                            <path
                                opacity="0.2"
                                d="M13.125 11.375C13.125 11.7211 13.0224 12.0595 12.8301 12.3472C12.6378 12.635 12.3645 12.8593 12.0447 12.9918C11.7249 13.1242 11.3731 13.1589 11.0336 13.0914C10.6941 13.0239 10.3823 12.8572 10.1376 12.6124C9.89282 12.3677 9.72615 12.0559 9.65863 11.7164C9.5911 11.3769 9.62576 11.0251 9.75821 10.7053C9.89066 10.3855 10.115 10.1122 10.4028 9.91993C10.6905 9.72764 11.0289 9.625 11.375 9.625C11.8391 9.625 12.2842 9.80937 12.6124 10.1376C12.9406 10.4658 13.125 10.9109 13.125 11.375ZM16.625 9.625C16.2789 9.625 15.9405 9.72764 15.6528 9.91993C15.365 10.1122 15.1407 10.3855 15.0082 10.7053C14.8758 11.0251 14.8411 11.3769 14.9086 11.7164C14.9762 12.0559 15.1428 12.3677 15.3876 12.6124C15.6323 12.8572 15.9441 13.0239 16.2836 13.0914C16.6231 13.1589 16.9749 13.1242 17.2947 12.9918C17.6145 12.8593 17.8878 12.635 18.0801 12.3472C18.2724 12.0595 18.375 11.7211 18.375 11.375C18.375 10.9109 18.1906 10.4658 17.8624 10.1376C17.5342 9.80937 17.0891 9.625 16.625 9.625ZM11.375 14.875C11.0289 14.875 10.6905 14.9776 10.4028 15.1699C10.115 15.3622 9.89066 15.6355 9.75821 15.9553C9.62576 16.2751 9.5911 16.6269 9.65863 16.9664C9.72615 17.3059 9.89282 17.6177 10.1376 17.8624C10.3823 18.1072 10.6941 18.2739 11.0336 18.3414C11.3731 18.4089 11.7249 18.3742 12.0447 18.2418C12.3645 18.1093 12.6378 17.885 12.8301 17.5972C13.0224 17.3095 13.125 16.9711 13.125 16.625C13.125 16.1609 12.9406 15.7158 12.6124 15.3876C12.2842 15.0594 11.8391 14.875 11.375 14.875Z"
                                fill="#C1C4D6"
                            />
                            <path
                                d="M11.375 9.1875C10.9424 9.1875 10.5194 9.3158 10.1597 9.55616C9.79996 9.79653 9.51958 10.1382 9.35401 10.5379C9.18845 10.9376 9.14513 11.3774 9.22953 11.8018C9.31394 12.2261 9.52228 12.6159 9.8282 12.9218C10.1341 13.2277 10.5239 13.4361 10.9482 13.5205C11.3726 13.6049 11.8124 13.5616 12.2121 13.396C12.6118 13.2304 12.9535 12.95 13.1938 12.5903C13.4342 12.2306 13.5625 11.8076 13.5625 11.375C13.5625 10.7948 13.332 10.2384 12.9218 9.8282C12.5116 9.41797 11.9552 9.1875 11.375 9.1875ZM11.375 12.6875C11.1154 12.6875 10.8617 12.6105 10.6458 12.4663C10.43 12.3221 10.2617 12.1171 10.1624 11.8773C10.0631 11.6374 10.0371 11.3735 10.0877 11.1189C10.1384 10.8643 10.2634 10.6305 10.4469 10.4469C10.6305 10.2634 10.8643 10.1384 11.1189 10.0877C11.3735 10.0371 11.6374 10.0631 11.8773 10.1624C12.1171 10.2617 12.3221 10.43 12.4663 10.6458C12.6105 10.8617 12.6875 11.1154 12.6875 11.375C12.6875 11.7231 12.5492 12.0569 12.3031 12.3031C12.0569 12.5492 11.7231 12.6875 11.375 12.6875ZM16.625 13.5625C17.0576 13.5625 17.4806 13.4342 17.8403 13.1938C18.2 12.9535 18.4804 12.6118 18.646 12.2121C18.8116 11.8124 18.8549 11.3726 18.7705 10.9482C18.6861 10.5239 18.4777 10.1341 18.1718 9.8282C17.8659 9.52228 17.4761 9.31394 17.0518 9.22953C16.6274 9.14513 16.1876 9.18845 15.7879 9.35401C15.3882 9.51958 15.0465 9.79996 14.8062 10.1597C14.5658 10.5194 14.4375 10.9424 14.4375 11.375C14.4375 11.9552 14.668 12.5116 15.0782 12.9218C15.4884 13.332 16.0448 13.5625 16.625 13.5625ZM16.625 10.0625C16.8846 10.0625 17.1383 10.1395 17.3542 10.2837C17.57 10.4279 17.7383 10.6329 17.8376 10.8727C17.9369 11.1126 17.9629 11.3765 17.9123 11.6311C17.8616 11.8857 17.7366 12.1195 17.5531 12.3031C17.3695 12.4866 17.1357 12.6116 16.8811 12.6623C16.6265 12.7129 16.3626 12.6869 16.1227 12.5876C15.8829 12.4883 15.6779 12.32 15.5337 12.1042C15.3895 11.8883 15.3125 11.6346 15.3125 11.375C15.3125 11.0269 15.4508 10.6931 15.6969 10.4469C15.9431 10.2008 16.2769 10.0625 16.625 10.0625ZM11.375 14.4375C10.9424 14.4375 10.5194 14.5658 10.1597 14.8062C9.79996 15.0465 9.51958 15.3882 9.35401 15.7879C9.18845 16.1876 9.14513 16.6274 9.22953 17.0518C9.31394 17.4761 9.52228 17.8659 9.8282 18.1718C10.1341 18.4777 10.5239 18.6861 10.9482 18.7705C11.3726 18.8549 11.8124 18.8116 12.2121 18.646C12.6118 18.4804 12.9535 18.2 13.1938 17.8403C13.4342 17.4806 13.5625 17.0576 13.5625 16.625C13.5625 16.0448 13.332 15.4884 12.9218 15.0782C12.5116 14.668 11.9552 14.4375 11.375 14.4375ZM11.375 17.9375C11.1154 17.9375 10.8617 17.8605 10.6458 17.7163C10.43 17.5721 10.2617 17.3671 10.1624 17.1273C10.0631 16.8874 10.0371 16.6235 10.0877 16.3689C10.1384 16.1143 10.2634 15.8805 10.4469 15.6969C10.6305 15.5134 10.8643 15.3884 11.1189 15.3377C11.3735 15.2871 11.6374 15.3131 11.8773 15.4124C12.1171 15.5117 12.3221 15.68 12.4663 15.8958C12.6105 16.1117 12.6875 16.3654 12.6875 16.625C12.6875 16.9731 12.5492 17.3069 12.3031 17.5531C12.0569 17.7992 11.7231 17.9375 11.375 17.9375ZM18.8125 16.625C18.8125 16.741 18.7664 16.8523 18.6844 16.9344C18.6023 17.0164 18.491 17.0625 18.375 17.0625H17.0625V18.375C17.0625 18.491 17.0164 18.6023 16.9344 18.6844C16.8523 18.7664 16.741 18.8125 16.625 18.8125C16.509 18.8125 16.3977 18.7664 16.3156 18.6844C16.2336 18.6023 16.1875 18.491 16.1875 18.375V17.0625H14.875C14.759 17.0625 14.6477 17.0164 14.5656 16.9344C14.4836 16.8523 14.4375 16.741 14.4375 16.625C14.4375 16.509 14.4836 16.3977 14.5656 16.3156C14.6477 16.2336 14.759 16.1875 14.875 16.1875H16.1875V14.875C16.1875 14.759 16.2336 14.6477 16.3156 14.5656C16.3977 14.4836 16.509 14.4375 16.625 14.4375C16.741 14.4375 16.8523 14.4836 16.9344 14.5656C17.0164 14.6477 17.0625 14.759 17.0625 14.875V16.1875H18.375C18.491 16.1875 18.6023 16.2336 18.6844 16.3156C18.7664 16.3977 18.8125 16.509 18.8125 16.625Z"
                                fill="#C1C4D6"
                            />
                        </svg>
                        홍길동
                    </div>

                    <div className="text-base text-n900">프론트엔드 포지션이 마감되었습니다. 지원해주셔서 감사합니다.</div>
                </div>
            )}

            <Modal
                title="지원 취소"
                children="지원을 취소하시겠습니까?"
                isOpen={isCancelModalOpen}
                onClose={() => setIsCancelModalOpen(false)}
                onConfirm={() => {
                    setIsCancelModalOpen(false);
                }}
            />
        </div>
    );
};

const LockedCard = () => {
    return (
        <div className="w-full h-[176px] bg-n75 border border-n300 rounded-lg text-baseEmphasize text-n600 flex gap-2 items-center justify-center">
            <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M16.75 6.25H14.25V4.375C14.25 3.38044 13.8549 2.42661 13.1517 1.72335C12.4484 1.02009 11.4946 0.625 10.5 0.625C9.50544 0.625 8.55161 1.02009 7.84835 1.72335C7.14509 2.42661 6.75 3.38044 6.75 4.375V6.25H4.25C3.91848 6.25 3.60054 6.3817 3.36612 6.61612C3.1317 6.85054 3 7.16848 3 7.5V16.25C3 16.5815 3.1317 16.8995 3.36612 17.1339C3.60054 17.3683 3.91848 17.5 4.25 17.5H16.75C17.0815 17.5 17.3995 17.3683 17.6339 17.1339C17.8683 16.8995 18 16.5815 18 16.25V7.5C18 7.16848 17.8683 6.85054 17.6339 6.61612C17.3995 6.3817 17.0815 6.25 16.75 6.25ZM8 4.375C8 3.71196 8.26339 3.07607 8.73223 2.60723C9.20107 2.13839 9.83696 1.875 10.5 1.875C11.163 1.875 11.7989 2.13839 12.2678 2.60723C12.7366 3.07607 13 3.71196 13 4.375V6.25H8V4.375ZM16.75 16.25H4.25V7.5H16.75V16.25ZM11.4375 11.875C11.4375 12.0604 11.3825 12.2417 11.2795 12.3958C11.1765 12.55 11.0301 12.6702 10.8588 12.7411C10.6875 12.8121 10.499 12.8307 10.3171 12.7945C10.1352 12.7583 9.9682 12.669 9.83709 12.5379C9.70598 12.4068 9.61669 12.2398 9.58051 12.0579C9.54434 11.876 9.56291 11.6875 9.63386 11.5162C9.70482 11.3449 9.82498 11.1985 9.97915 11.0955C10.1333 10.9925 10.3146 10.9375 10.5 10.9375C10.7486 10.9375 10.9871 11.0363 11.1629 11.2121C11.3387 11.3879 11.4375 11.6264 11.4375 11.875Z"
                    fill="#8F95B2"
                />
            </svg>
            지원자 프로필은 작성자만 열람 가능합니다.
        </div>
    );
};
