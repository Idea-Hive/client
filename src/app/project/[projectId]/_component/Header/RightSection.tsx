"use client";

import Button from "@/components/Button";
import Modal from "@/components/Modal";
import { useState } from "react";

export default function RightSection() {
    const [isOpenApplicantModal, setIsOpenApplicantModal] = useState<boolean>(false);
    const [isOpenApplicantSuccessModal, setIsOpenApplicantSuccessModal] = useState<boolean>(false);

    return (
        <div className="flex flex-col justify-between">
            <div className="flex gap-3 items-center text-sm text-black">
                <div className="flex gap-1.5 items-center">
                    <ShareIcon />
                    공유하기
                </div>
                <div className="flex gap-1.5 items-center">
                    <LikedIcon />
                    29
                </div>
                <div className="flex gap-1.5 items-center">
                    <ViewIcon />
                    290
                </div>
            </div>
            <div className="flex justify-end">
                <Button label="지원하기" className="w-fit px-6" onClick={() => setIsOpenApplicantModal(true)} />
            </div>

            {isOpenApplicantModal && !isOpenApplicantSuccessModal ? (
                <Modal
                    isOpen={isOpenApplicantModal}
                    title="지원하기"
                    children="지원사유를 작성해주세요. 작성자에게 전달됩니다"
                    content={
                        <div className="w-full h-fit mt-4 p-4 bg-n75 border border-n300 rounded-[4px] flex gap-2">
                            <textarea
                                className="w-full h-fit min-h-20 resize-none bg-n75 border-none text-sm text-n800 focus:outline-none"
                                placeholder="지원사유를 작성해주세요. 작성자에게 전달됩니다"
                            />
                            <div className="flex flex-col justify-end text-xs text-n800">0/20</div>
                        </div>
                    }
                    confirmText="지원하기"
                    onClose={() => setIsOpenApplicantModal(false)}
                    onConfirm={() => setIsOpenApplicantSuccessModal(true)}
                />
            ) : (
                <Modal
                    isOpen={isOpenApplicantSuccessModal}
                    title="지원 완료"
                    children="지원이 완료되었습니다"
                    onConfirm={() => {
                        setIsOpenApplicantSuccessModal(false);
                        setIsOpenApplicantModal(false);
                    }}
                />
            )}
        </div>
    );
}

const ShareIcon = () => {
    return (
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M12.9422 7.05776C13.0003 7.11581 13.0464 7.18474 13.0778 7.26061C13.1093 7.33648 13.1255 7.41781 13.1255 7.49995C13.1255 7.58208 13.1093 7.66341 13.0778 7.73929C13.0464 7.81516 13.0003 7.88409 12.9422 7.94214L7.94217 12.9421C7.8841 13.0002 7.81516 13.0463 7.73929 13.0777C7.66342 13.1091 7.5821 13.1253 7.49998 13.1253C7.41786 13.1253 7.33654 13.1091 7.26067 13.0777C7.1848 13.0463 7.11586 13.0002 7.05779 12.9421C6.99972 12.8841 6.95366 12.8151 6.92223 12.7393C6.89081 12.6634 6.87463 12.5821 6.87463 12.4999C6.87463 12.4178 6.89081 12.3365 6.92223 12.2606C6.95366 12.1848 6.99972 12.1158 7.05779 12.0578L12.0578 7.05776C12.1158 6.99965 12.1848 6.95355 12.2606 6.9221C12.3365 6.89065 12.4178 6.87446 12.5 6.87446C12.5821 6.87446 12.6634 6.89065 12.7393 6.9221C12.8152 6.95355 12.8841 6.99965 12.9422 7.05776ZM16.8437 3.1562C16.4375 2.7499 15.9552 2.4276 15.4243 2.2077C14.8935 1.98781 14.3246 1.87463 13.75 1.87463C13.1754 1.87463 12.6065 1.98781 12.0756 2.2077C11.5448 2.4276 11.0625 2.7499 10.6562 3.1562L8.30779 5.50385C8.19052 5.62113 8.12463 5.78019 8.12463 5.94604C8.12463 6.1119 8.19052 6.27095 8.30779 6.38823C8.42507 6.50551 8.58413 6.57139 8.74998 6.57139C8.91583 6.57139 9.07489 6.50551 9.19217 6.38823L11.5406 4.04448C12.1288 3.46921 12.9201 3.1491 13.7429 3.15363C14.5656 3.15816 15.3533 3.48697 15.9352 4.06868C16.517 4.6504 16.8459 5.43809 16.8506 6.26082C16.8553 7.08355 16.5353 7.87494 15.9601 8.46323L13.6109 10.8117C13.4936 10.9288 13.4277 11.0878 13.4276 11.2536C13.4276 11.4194 13.4934 11.5784 13.6105 11.6957C13.7277 11.8129 13.8867 11.8789 14.0524 11.8789C14.2182 11.879 14.3772 11.8132 14.4945 11.696L16.8437 9.3437C17.25 8.93744 17.5723 8.45512 17.7922 7.92429C18.0121 7.39346 18.1253 6.82452 18.1253 6.24995C18.1253 5.67538 18.0121 5.10643 17.7922 4.57561C17.5723 4.04478 17.25 3.56246 16.8437 3.1562ZM10.8078 13.6109L8.45935 15.9593C8.17035 16.2548 7.8256 16.49 7.44507 16.6514C7.06454 16.8127 6.65578 16.897 6.24246 16.8992C5.82914 16.9015 5.41948 16.8218 5.03719 16.6646C4.6549 16.5075 4.30758 16.2761 4.01534 15.9838C3.72311 15.6915 3.49176 15.3441 3.33469 14.9618C3.17762 14.5795 3.09795 14.1698 3.1003 13.7565C3.10265 13.3432 3.18697 12.9345 3.34837 12.554C3.50978 12.1734 3.74506 11.8287 4.0406 11.5398L6.38826 9.19214C6.50554 9.07486 6.57142 8.9158 6.57142 8.74995C6.57142 8.5841 6.50554 8.42504 6.38826 8.30776C6.27099 8.19049 6.11193 8.1246 5.94607 8.1246C5.78022 8.1246 5.62116 8.19049 5.50389 8.30776L3.15623 10.6562C2.33572 11.4767 1.87476 12.5896 1.87476 13.7499C1.87476 14.9103 2.33572 16.0232 3.15623 16.8437C3.97674 17.6642 5.0896 18.1252 6.24998 18.1252C7.41036 18.1252 8.52322 17.6642 9.34373 16.8437L11.6922 14.4945C11.8093 14.3772 11.8751 14.2182 11.8751 14.0524C11.875 13.8866 11.8091 13.7277 11.6918 13.6105C11.5745 13.4933 11.4155 13.4275 11.2497 13.4276C11.0839 13.4277 10.925 13.4936 10.8078 13.6109Z"
                fill="#474D66"
            />
        </svg>
    );
};

const LikedIcon = () => {
    return (
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M13.9062 3.125C12.293 3.125 10.8805 3.81875 10 4.99141C9.11953 3.81875 7.70703 3.125 6.09375 3.125C4.80955 3.12645 3.57837 3.63723 2.6703 4.5453C1.76223 5.45337 1.25145 6.68455 1.25 7.96875C1.25 13.4375 9.35859 17.8641 9.70391 18.0469C9.79492 18.0958 9.89665 18.1215 10 18.1215C10.1033 18.1215 10.2051 18.0958 10.2961 18.0469C10.6414 17.8641 18.75 13.4375 18.75 7.96875C18.7486 6.68455 18.2378 5.45337 17.3297 4.5453C16.4216 3.63723 15.1904 3.12645 13.9062 3.125ZM10 16.7813C8.57344 15.95 2.5 12.1633 2.5 7.96875C2.50124 7.01601 2.88026 6.10265 3.55396 5.42896C4.22765 4.75526 5.14101 4.37624 6.09375 4.375C7.61328 4.375 8.88906 5.18438 9.42188 6.48438C9.46896 6.59901 9.54907 6.69705 9.65201 6.76605C9.75494 6.83505 9.87607 6.8719 10 6.8719C10.1239 6.8719 10.2451 6.83505 10.348 6.76605C10.4509 6.69705 10.531 6.59901 10.5781 6.48438C11.1109 5.18203 12.3867 4.375 13.9062 4.375C14.859 4.37624 15.7724 4.75526 16.446 5.42896C17.1197 6.10265 17.4988 7.01601 17.5 7.96875C17.5 12.157 11.425 15.9492 10 16.7813Z"
                fill="#FF6363"
            />
        </svg>
    );
};

const ViewIcon = () => {
    return (
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M19.3211 9.74688C19.2937 9.68516 18.632 8.21719 17.1609 6.74609C15.2008 4.78594 12.725 3.75 9.99999 3.75C7.27499 3.75 4.79921 4.78594 2.83905 6.74609C1.36796 8.21719 0.703118 9.6875 0.678899 9.74688C0.643362 9.82681 0.625 9.91331 0.625 10.0008C0.625 10.0883 0.643362 10.1748 0.678899 10.2547C0.706243 10.3164 1.36796 11.7836 2.83905 13.2547C4.79921 15.2141 7.27499 16.25 9.99999 16.25C12.725 16.25 15.2008 15.2141 17.1609 13.2547C18.632 11.7836 19.2937 10.3164 19.3211 10.2547C19.3566 10.1748 19.375 10.0883 19.375 10.0008C19.375 9.91331 19.3566 9.82681 19.3211 9.74688ZM9.99999 15C7.5953 15 5.49452 14.1258 3.75546 12.4023C3.0419 11.6927 2.43483 10.8836 1.95312 10C2.4347 9.11636 3.04179 8.30717 3.75546 7.59766C5.49452 5.87422 7.5953 5 9.99999 5C12.4047 5 14.5055 5.87422 16.2445 7.59766C16.9595 8.307 17.5679 9.11619 18.0508 10C17.4875 11.0516 15.0336 15 9.99999 15ZM9.99999 6.25C9.25831 6.25 8.53329 6.46993 7.9166 6.88199C7.29992 7.29404 6.81927 7.87971 6.53544 8.56494C6.25162 9.25016 6.17735 10.0042 6.32205 10.7316C6.46674 11.459 6.82389 12.1272 7.34834 12.6517C7.87279 13.1761 8.54097 13.5333 9.2684 13.6779C9.99583 13.8226 10.7498 13.7484 11.4351 13.4645C12.1203 13.1807 12.7059 12.7001 13.118 12.0834C13.5301 11.4667 13.75 10.7417 13.75 10C13.749 9.00576 13.3535 8.05253 12.6505 7.34949C11.9475 6.64645 10.9942 6.25103 9.99999 6.25ZM9.99999 12.5C9.50554 12.5 9.02219 12.3534 8.61107 12.0787C8.19994 11.804 7.87951 11.4135 7.69029 10.9567C7.50107 10.4999 7.45157 9.99723 7.54803 9.51227C7.64449 9.02732 7.88259 8.58186 8.23222 8.23223C8.58186 7.8826 9.02731 7.6445 9.51227 7.54804C9.99722 7.45157 10.4999 7.50108 10.9567 7.6903C11.4135 7.87952 11.804 8.19995 12.0787 8.61107C12.3534 9.0222 12.5 9.50555 12.5 10C12.5 10.663 12.2366 11.2989 11.7678 11.7678C11.2989 12.2366 10.663 12.5 9.99999 12.5Z"
                fill="#474D66"
            />
        </svg>
    );
};
